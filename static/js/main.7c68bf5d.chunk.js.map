{"version":3,"sources":["components/Cards.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["card","id","name","email","className","src","alt","width","height","CardList","robots","map","user","i","Cards","SearchBox","searhChange","type","placeholder","onChange","Scroll","props","style","overflowY","children","ErrorBoundry","state","hasError","this","setState","Component","App","onSearhChange","event","searchfield","target","value","fetch","then","Response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAmBeA,EAhBF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACtB,OACI,sBAAKC,UAAU,oEAAf,UACI,qBAAKC,IAAG,+BAA0BJ,GAAMK,IAAI,SAASC,MAAM,MAAMC,OAAO,QAIxE,gCACI,6BAAKN,IACL,4BAAIC,WCULM,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,mCAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAACC,EAAD,CACIb,GAAIS,EAAOG,GAAGZ,GACdC,KAAMQ,EAAOG,GAAGX,KAChBC,MAAOO,EAAOG,GAAGV,cCK9BY,EAfG,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACjB,OAEI,qBAAKZ,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVa,KAAK,SACLC,YAAY,kBACZC,SAAUH,OCGXI,G,MAXA,SAACC,GAEZ,OACI,qBAAKC,MAAO,CAAEC,UAAW,SAAUf,OAAQ,SAA3C,SACKa,EAAMG,aCkBJC,E,kDArBX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTC,UAAU,GAHJ,E,qDAQd,WACIC,KAAKC,SAAS,CAAEF,UAAU,M,oBAI9B,WACI,OAAIC,KAAKF,MAAMC,SACJ,oBAAIvB,UAAU,KAAd,qCAEJwB,KAAKP,MAAMG,a,GAlBCM,aCuDZC,E,kDAhDX,aAAe,IAAD,8BACV,gBAeJC,cAAgB,SAACC,GACb,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAf1C,EAAKV,MAAQ,CACThB,OAAQ,GACRwB,YAAa,IAJP,E,qDASd,WAAqB,IAAD,OAChBG,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAW,EAAKZ,SAAS,CAAEnB,OAAQ+B,S,oBASjD,WAAU,IAAD,EAC2Bb,KAAKF,MAA7BhB,EADH,EACGA,OAAQwB,EADX,EACWA,YAEVQ,EAAiBhC,EAAOiC,QAAO,SAAAC,GACjC,OAAOA,EAAM1C,KAAK2C,cAAcC,SAASZ,EAAYW,kBAIzD,OAAQnC,EAAOqC,OAGP,sBAAK3C,UAAU,KAAf,UAEI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWY,YAAaY,KAAKI,gBAE7B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUtB,OAAQgC,WATlC,oBAAItC,UAAU,KAAd,2B,GA/BM0B,aCGHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7c68bf5d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst card = ({ id, name, email }) => {\r\n    return (\r\n        <div className='tc bg-light-green dib br3 ma3 pa3 grow bw2 shadow-5 h-auto w-auto'>\r\n            <img src={`https://robohash.org/${id}`} alt='robots' width='280' height='250' />\r\n\r\n\r\n\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default card;\r\n","import React from 'react';\r\nimport Cards from './Cards';\r\n\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Cards\r\n                            id={robots[i].id}\r\n                            name={robots[i].name}\r\n                            email={robots[i].email}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\n\r\nconst SearchBox = ({ searhChange }) => {\r\n    return (\r\n\r\n        <div className='pa2'>\r\n            <input\r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type='search'\r\n                placeholder='search robots..'\r\n                onChange={searhChange}\r\n            />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\n\r\nconst Scroll = (props) => {\r\n\r\n    return (\r\n        <div style={{ overflowY: 'scroll', height: '800px' }}>\r\n            {props.children}\r\n\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n\r\n    componentDidCatch() {\r\n        this.setState({ hasError: true })\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h2 className='tc'>Please try again later.</h2>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n\r\n","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList'\r\n// import { robots } from './robots'\r\nimport SearchBox from '../components/SearchBox'\r\nimport './App.css'\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundry from '../components/ErrorBoundry'\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(Response => Response.json())\r\n            .then(users => { this.setState({ robots: users }) })\r\n    }\r\n\r\n\r\n    onSearhChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        }\r\n        )\r\n\r\n        return !robots.length ?\r\n            <h2 className='tc'>Loading..</h2> :\r\n            (\r\n                <div className='tc'>\r\n\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searhChange={this.onSearhChange} />\r\n\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots={filteredRobots} />\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n\r\n                </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}